version: '3.9'
services:

  pg_keycloak:
    image: postgres:13.2
    container_name: pg_keycloak
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: keycloak
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "15433:5432"
  #      - ${KC_POSTGRES_PORT_MAPPING:-5435}:5432

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    restart: always
    volumes:
      - type: bind
        source: ./keycloak/realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: true
      - type: bind
        source: ./keycloak/custom-scripts.jar
        target: /opt/keycloak/providers/custom-scripts.jar
        read_only: true
    command:
      - start-dev --db postgres --import-realm --health-enabled=true
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
#      - PROXY_ADDRESS_FORWARDING=true
#      - LETSENCRYPT_HOST=dev-keycloak.mydomain.com
      - KC_DB=postgres #build option
      - KC_FEATURES=admin2,authorization #build option
      - KC_DB_URL_HOST=pg_keycloak
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=password
#    healthcheck:
#      test: [ "CMD", "curl", "--head","-fsS", "http://localhost:8080/health/ready" ]
#      start_period: 10s
#      interval: 30s
#      retries: 3
#      timeout: 5s
#    depends_on:
#      pg_keycloak:
#        condition: service_healthy
    ports:
      - "8081:8080"
      - "9090:8080"
    expose:
      - "9090"
